<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    
    <!-- 启动扫描所有的controller -->
    <context:component-scan base-package="com.hgn.kimi.web"/>
    
    <!--  主要作用于@Controller，激活该模式
        
    	下面是一种简写形式，完全可以手动配置替代这种简写形式；
    	 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
    	   是spring MVC为@Controllers分发请求所必须的
     -->
    <mvc:annotation-driven/>
    
    <!-- 这里拦截器还有一种配置方法【针对路径进行配置】 推荐使用这个，方便直观-->
    <mvc:interceptors>
		<bean class="com.hgn.kimi.web.interceptor.BaseInterceptor"></bean>
    	<mvc:interceptor>
    		<mvc:mapping path="/user/MyHome"/>
    		<mvc:mapping path="/usermanager/*"/>
    		<bean class="com.hgn.kimi.web.interceptor.BaseInterceptor"></bean>
    	</mvc:interceptor>
    </mvc:interceptors>
    
     <!-- 全局配置 
    <mvc:interceptors>
    	<bean class="com.aokunsang.web.interceptor.MyInterceptor"></bean>
    </mvc:interceptors>
    -->
    <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 
	mapping :WebRoot里面的静态文件位置目录
	location : 访问地址 
    <mvc:resources location="/css/**" mapping="/WEB-INF/css/"/>
    <mvc:resources location="/js/**" mapping="/WEB-INF/js/"/>
    <mvc:resources location="/fonts/**" mapping="/WEB-INF/fonts/"/>
    -->

    <!--
       配置/WEB-INF/views/目录里面的jsp文件不被DispatcherServlet处理，可以直接通过浏览器访问。
       view-name: /WEB-INF/views/里面的jsp文件名(不许后缀即可)
       path:访问地址
    --> 
    <mvc:view-controller path="/header" view-name="header"/>

    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件
    InternalResourceViewResolver：用于支持Servlet、JSP视图解析；
    viewClass：JstlView表示JSP模板页面需要使用JSTL标签库，classpath中必须包含jstl的相关jar包；
    prefix和suffix：查找视图页面的前缀和后缀（前缀[逻辑视图名]后缀），比如传进来的逻辑视图名为hello，则该该jsp视图页面应该存放在“WEB-INF/jsp/hello.jsp”；
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    	<property name="prefix" value="/view/"></property>
    	<property name="suffix" value=".jsp"></property>
    </bean>
</beans>